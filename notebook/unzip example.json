{
	"name": "unzip example",
	"properties": {
		"folder": {
			"name": "dp500"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "synapsedemo",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "349e58ba-90d9-4c22-9de3-1cb8e1b35f4a"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/3c3bb71f-3a4c-436f-9e0a-7407d75a82fa/resourceGroups/2022-DSI-Resources/providers/Microsoft.Synapse/workspaces/2022-dsi-synapse-ws/bigDataPools/synapsedemo",
				"name": "synapsedemo",
				"type": "Spark",
				"endpoint": "https://2022-dsi-synapse-ws.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/synapsedemo",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.2",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"df = spark.read.load('abfss://users@2022dsidatalake.dfs.core.windows.net/synapse/workspaces/2022-dsi-synapse-ws/warehouse/model_sample/test_data.csv', format='csv'\r\n",
					"## If header exists uncomment line below\r\n",
					", header=True\r\n",
					")\r\n",
					"display(df.limit(10))"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from zipfile import ZipFile"
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"\r\n",
					"with ZipFile('abfss://users@2022dsidatalake.dfs.core.windows.net/synapse/workspaces/2022-dsi-synapse-ws/warehouse/model_sample/loaded_capture_twitter_10M.zip', 'r') as zipObj:\r\n",
					"   # Extract all the contents of zip file in current directory\r\n",
					"   zipObj.extractall()"
				],
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import os\r\n",
					"os.getcwd()"
				],
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# To read data\r\n",
					"import fsspec\r\n",
					"import pandas\r\n",
					"\r\n",
					"adls_account_name = '' #Provide exact ADLS account name\r\n",
					"adls_account_key = '' #Provide exact ADLS account key\r\n",
					"\r\n",
					"fsspec_handle = fsspec.open(\"abfss://users@2022dsidatalake.dfs.core.windows.net/synapse/workspaces/2022-dsi-synapse-ws/warehouse/model_sample/loaded_capture_twitter_10M.zip\", account_name=adls_account_name, account_key=adls_account_key)\r\n",
					"\r\n",
					"with fsspec_handle.open() as f:\r\n",
					"    df = pandas.read_csv(f)\r\n",
					"\r\n",
					"# To write data\r\n",
					"import fsspec\r\n",
					"import pandas\r\n",
					"\r\n",
					"adls_account_name = '' #Provide exact ADLS account name \r\n",
					"adls_account_key = '' #Provide exact ADLS account key \r\n",
					"\r\n",
					"data = pandas.DataFrame({'Name':['Tom', 'nick', 'krish', 'jack'], 'Age':[20, 21, 19, 18]})\r\n",
					"\r\n",
					"fsspec_handle = fsspec.open('abfs[s]://<container>/<path-to-file>', account_name=adls_account_name, account_key=adls_account_key, mode=\"wt\")\r\n",
					"\r\n",
					"with fsspec_handle.open() as f:\r\n",
					" data.to_csv(f)"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"abfs[s]://2022dsidatalake.dfs.core.windows.net/warehouse/model_sample/loaded_capture_twitter_10M.zip'\r\n",
					"\r\n",
					""
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"#Read data file from URI of secondary Azure Data Lake Storage Gen2\r\n",
					"\r\n",
					"import pandas\r\n",
					"\r\n",
					"#read data file\r\n",
					"df = pandas.read_csv('http://2022dsidatalake.dfs.core.windows.net/synapse/workspaces/2022-dsi-synapse-ws/warehouse/model_sample/test_data.csv', storage_options = {'linked_service' : '2022-dsi-synapse-ws-WorkspaceDefaultStorage'})\r\n",
					"print(df)\r\n",
					"   "
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"\r\n",
					"   #write data file\r\n",
					"   data = pandas.DataFrame({'Name':['A', 'B', 'C', 'D'], 'ID':[20, 21, 19, 18]})\r\n",
					"   data.to_csv('abfs[s]://file_system_name@account_name.dfs.core.windows.net/file_path',    storage_options = {'linked_service' : 'linked_service_name'})"
				],
				"execution_count": null
			}
		]
	}
}